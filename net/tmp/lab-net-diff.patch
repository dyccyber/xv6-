diff --git a/kernel/e1000.c b/kernel/e1000.c
index 70a2adf..28be42a 100644
--- a/kernel/e1000.c
+++ b/kernel/e1000.c
@@ -95,28 +95,57 @@ e1000_init(uint32 *xregs)
 int
 e1000_transmit(struct mbuf *m)
 {
-  //
-  // Your code here.
-  //
-  // the mbuf contains an ethernet frame; program it into
-  // the TX descriptor ring so that the e1000 sends it. Stash
-  // a pointer so that it can be freed after sending.
-  //
-  
+  acquire(&e1000_lock); // 上锁，保证多线程互斥访问
+
+  uint32 ind = regs[E1000_TDT]; // 获取下一个可用的 buffer 的下标
+  struct tx_desc *desc = &tx_ring[ind]; // 获取 buffer 的描述符，其中存储了关于该 buffer 的各种信息
+  // 检查环形队列缓冲区是否溢出
+  if(!(desc->status & E1000_TXD_STAT_DD)) {
+    release(&e1000_lock);
+    return -1;
+  }
+  // 已经发送完毕的数据包释放
+  if(tx_mbufs[ind]) {
+    mbuffree(tx_mbufs[ind]);
+    tx_mbufs[ind] = 0;
+  }
+  //填写描述符
+  // 将要发送的 mbuf 的内存地址与长度填写到发送描述符中
+  desc->addr = (uint64)m->head;
+  desc->length = m->len;
+  // 设置EOP ,表示该 buffer 含有一个完整的 packet
+  // 设置 status 中的 E1000_TXD_STAT_DD 位，表示发送完成。
+  desc->cmd = E1000_TXD_CMD_EOP | E1000_TXD_CMD_RS;
+  // 保留新 mbuf 的指针，方便后续释放。
+  tx_mbufs[ind] = m;
+  // 环形缓冲区内下标增加一。
+  regs[E1000_TDT] = (regs[E1000_TDT] + 1) % TX_RING_SIZE;
+
+  release(&e1000_lock);
   return 0;
 }
 
 static void
 e1000_recv(void)
 {
-  //
-  // Your code here.
-  //
-  // Check for packets that have arrived from the e1000
-  // Create and deliver an mbuf for each packet (using net_rx()).
-  //
-}
+  while(1) { 
+    //获取环形队列buffer的下标与描述符
+    uint32 ind = (regs[E1000_RDT] + 1) % RX_RING_SIZE;
+    struct rx_desc *desc = &rx_ring[ind];
+    // 使用dd位判断，如果需要接收的包都已经接收完毕，则退出
+    if(!(desc->status & E1000_RXD_STAT_DD)) {
+      return;
+    }
+    rx_mbufs[ind]->len = desc->length;
+    net_rx(rx_mbufs[ind]); // 传递给上层网络栈，上层负责释放 mbuf
+    // 分配并设置新的 mbuf，供给下一次轮到该下标时使用
+    rx_mbufs[ind] = mbufalloc(0); 
+    desc->addr = (uint64)rx_mbufs[ind]->head;
+    desc->status = 0;
+    regs[E1000_RDT] = ind;
+  }
 
+}
 void
 e1000_intr(void)
 {
diff --git a/packets.pcap b/packets.pcap
index 82d353e..68e591b 100644
Binary files a/packets.pcap and b/packets.pcap differ
diff --git a/time.txt b/time.txt
new file mode 100644
index 0000000..56a6051
--- /dev/null
+++ b/time.txt
@@ -0,0 +1 @@
+1
\ No newline at end of file
